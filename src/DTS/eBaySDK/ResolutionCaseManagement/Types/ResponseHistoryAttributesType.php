<?php
/**
 * The contents of this file was generated using the WSDLs as provided by eBay.
 *
 * DO NOT EDIT THIS FILE!
 */

namespace DTS\eBaySDK\ResolutionCaseManagement\Types;

/**
 *
 * @property \DTS\eBaySDK\ResolutionCaseManagement\Types\AppealRef $appealRef
 * @property \DTS\eBaySDK\ResolutionCaseManagement\Types\MoneyMovementRef $moneyMovementRef
 * @property string $onholdReason
 * @property \DTS\eBaySDK\ResolutionCaseManagement\Types\OnHoldReasonDetailType $onholdReasonDetail
 * @property string $idref
 * @property string $idref
 */
class ResponseHistoryAttributesType extends \DTS\eBaySDK\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = array(
        'appealRef' => array(
            'type' => 'DTS\eBaySDK\ResolutionCaseManagement\Types\AppealRef',
            'unbound' => false,
            'attribute' => false,
            'elementName' => 'appealRef'
        ),
        'moneyMovementRef' => array(
            'type' => 'DTS\eBaySDK\ResolutionCaseManagement\Types\MoneyMovementRef',
            'unbound' => false,
            'attribute' => false,
            'elementName' => 'moneyMovementRef'
        ),
        'onholdReason' => array(
            'type' => 'string',
            'unbound' => false,
            'attribute' => false,
            'elementName' => 'onholdReason'
        ),
        'onholdReasonDetail' => array(
            'type' => 'DTS\eBaySDK\ResolutionCaseManagement\Types\OnHoldReasonDetailType',
            'unbound' => false,
            'attribute' => false,
            'elementName' => 'onholdReasonDetail'
        ),
        'idref' => array(
            'type' => 'string',
            'unbound' => false,
            'attribute' => true,
            'attributeName' => 'idref'
        ),
        'idref' => array(
            'type' => 'string',
            'unbound' => false,
            'attribute' => true,
            'attributeName' => 'idref'
        )
    );

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = array())
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        if (!array_key_exists(__CLASS__, self::$xmlNamespaces)) {
            self::$xmlNamespaces[__CLASS__] = 'xmlns="http://www.ebay.com/marketplace/resolution/v1/services"';
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
